#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil 
#+TITLE: 3.1.11-1 Prototyping
#+AUTHOR: Marc Scott

#+BEGIN_HTML
<div class=ribbon>
<a href="GITHUB URL HERE">Fork me on GitHub</a>
</div>
#+END_HTML
* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

* Prototyping
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** From the Spec
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
-Students should:
 - understand what prototyping is
 - be able to discuss the advantages and disadvantages of using prototyping when developing solutions
 - have experience of using prototyping to create solutions to simple problems.
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- A prototype is an early sample, model, or release of a software product built to test a concept or process or to act as a thing to be replicated or learned from.
- A prototype typically allows a customer to evaluate a product or feature of a proposed software solution, rather than relying on interpretations of designs.
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- The advantages of prototyping are:
  1. Evaluating whether or not the developed software matches the specification.
  2. Help clarify the clients requirements and improve the specification.
  3. Minimise budget and time overruns due to a mismatch between the client's and designers understanding of the specification.
  4. Allow the client to test features and offer improvements through feedback.
  5. Assist in producing a product that more closely matches the client's needs.
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- The disadvantages of prototyping are:
  1. As prototyping usually focuses on a small part of the software, the whole project may not be taken into consideration, resulting in a poorly implemented final solution.
  2. The prototype may be perfect, but is unable to be scaled into a full solution.
  3. Client's may become confused between the prototype and the final solution, and think that the prototype should accurately model the final software.
  4. Developers can become attached to a prototype, having spent many hours producing it, and are reluctant to through away their work.
  5. Prototyping can take excessively long if not conducted properly. Prototyping needs to be rapid to be effective.
  6. Prototyping can be expensive. Developers need to be properly trained in prototyping tools and practices that they are not familiar with.
** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:
- A client has requested a new computer game to be developed. It will be a multiplayer flight-combat simulator.
- Detail some issues the designer might face if presenting a finished game to the client, that has not been prototyped.
- Discuss what aspects of the game could be prototyped.
- What might be the disadvantages to the developer or client of prototyping these aspects.
